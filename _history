{"entries":[{"timestamp":1747343704879,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//  0: preto\n//  1: cor\nfunction verificar() {\n    let leitor_esquerda = pins.analogReadPin(AnalogPin.P1)\n    let leitor_direita = pins.analogReadPin(AnalogPin.P2)\n}\n"],[0,"\n"]],"start1":0,"start2":0,"length1":167,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":238,"start2":238,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"# 0: preto\n# 1: cor\n\ndef verificar():\n    leitor_esquerda = pins.analog_read_pin(AnalogPin.P1)\n    leitor_direita = pins.analog_read_pin(AnalogPin.P2)\n    \n"}]},{"timestamp":1747344271380,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"P2)\n"],[-1,"    serial.writeNumber(leitor_esquerda)\n    serial.writeNumber(leitor_direita)\n}\n\nbasic.forever(function on_forever() {\n    verificar()\n})"],[1,"}\n"],[0,"\n"]],"start1":160,"start2":160,"length1":143,"length2":7}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"P2)\n"],[-1,"\n"],[0,"    "],[-1,"serial.write_number(leitor_esquerda)\n    serial.write_number(leitor_direita)\n\ndef on_forever():\n    verificar()\n\nbasic.forever(on_forever)"],[1,"\n"]],"start1":147,"start2":147,"length1":147,"length2":9}]}]},{"timestamp":1747344745994,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"reita)\n\n"],[-1,"\n\n"],[0,"def on_f"]],"start1":226,"start2":226,"length1":18,"length2":16},{"diffs":[[0,"()\n\n"],[-1,"    \n\n"],[0,"basi"]],"start1":265,"start2":265,"length1":14,"length2":8}]}]},{"timestamp":1747345218174,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"P1)\n    "],[-1,"//"],[1,"let"],[0," leitor_"]],"start1":102,"start2":102,"length1":18,"length2":19},{"diffs":[[0,"alog"],[-1,"_read_p"],[1,"ReadP"],[0,"in(A"]],"start1":138,"start2":138,"length1":15,"length2":13},{"diffs":[[0,"da)\n"],[-1,"}\n\n//"],[1,"   "],[0," ser"]],"start1":200,"start2":200,"length1":13,"length2":11},{"diffs":[[0,"rite"],[-1,"_n"],[1,"N"],[0,"umbe"]],"start1":216,"start2":216,"length1":10,"length2":9},{"diffs":[[0,"ireita)\n"],[1,"}\n\n"],[0,"basic.fo"]],"start1":235,"start2":235,"length1":16,"length2":19}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"P1)\n    "],[-1,"#"],[0,"leitor_d"]],"start1":91,"start2":91,"length1":17,"length2":16},{"diffs":[[0,"da)\n    "],[-1,"#"],[0,"serial.w"]],"start1":189,"start2":189,"length1":17,"length2":16}]}]},{"timestamp":1747345534329,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ins."],[-1,"digital"],[1,"analog"],[0,"Read"]],"start1":74,"start2":74,"length1":15,"length2":14}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ins."],[-1,"digital"],[1,"analog"],[0,"_rea"]],"start1":61,"start2":61,"length1":15,"length2":14}]}]},{"timestamp":1747346068458,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"(AnalogPin.P"],[-1,"2"],[1,"1"],[0,")\n    // lei"]],"start1":92,"start2":92,"length1":25,"length2":25},{"diffs":[[0,"    "],[-1,"basic.show"],[1,"serial.write"],[0,"Numb"]],"start1":166,"start2":166,"length1":18,"length2":20}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"logPin.P"],[-1,"2"],[1,"1"],[0,")\n    #l"]],"start1":85,"start2":85,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"basic.show"],[1,"serial.write"],[0,"_num"]],"start1":154,"start2":154,"length1":18,"length2":20}]}]},{"timestamp":1747346432447,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"logPin.P"],[-1,"1"],[1,"2"],[0,")\n    #l"]],"start1":85,"start2":85,"length1":17,"length2":17}]}]},{"timestamp":1747915179660,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"logPin.P"],[-1,"1"],[1,"2"],[0,")\n    //"]],"start1":96,"start2":96,"length1":17,"length2":17}]}]},{"timestamp":1747915179783,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"1: cor\n\n"],[-1,"\n\n"],[0,"def veri"]],"start1":13,"start2":13,"length1":18,"length2":16}]}]},{"timestamp":1747916332520,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"or\n\n"],[-1,"---"],[0,"\n\nde"]],"start1":17,"start2":17,"length1":11,"length2":8}]}]},{"timestamp":1747916336309,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"cor\n"],[-1,"/** \n\nmotorA = robotbit.Motors.M1A\nmotorB = robotbit.Motors.M1B\n\ndef on_forever():\n    robotbit.motor_run(motorA, 150)\n    robotbit.motor_run(motorB, 150)\n    basic.pause(2500)\n    robotbit.motor_run(motorA, 0)\n    robotbit.motor_run(motorB, 0)\n    basic.pause(2500)\nbasic.forever(on_forever)\n\n\n\n */\nlet motorA = robotbit.Motors.M1A\nlet motorB = robotbit.Motors.M1B\n"],[0,"func"]],"start1":20,"start2":20,"length1":374,"length2":8},{"diffs":[[0,"ar()"],[-1,": number[]"],[0," {\n "]],"start1":40,"start2":40,"length1":18,"length2":8},{"diffs":[[0,"Pin.P1)\n    "],[-1,"let"],[1,"//"],[0," leitor_dire"]],"start1":99,"start2":99,"length1":27,"length2":26},{"diffs":[[0,"s.analog"],[-1,"ReadP"],[1,"_read_p"],[0,"in(Analo"]],"start1":134,"start2":134,"length1":21,"length2":23},{"diffs":[[0,".P2)\n   "],[-1," //"],[0," basic.s"]],"start1":161,"start2":161,"length1":19,"length2":16},{"diffs":[[0,"show"],[-1,"_n"],[1,"N"],[0,"umbe"]],"start1":176,"start2":176,"length1":10,"length2":9},{"diffs":[[0,"da)\n"],[-1,"    return [leitor_esquerda, "],[1,"}\n\n// serial.write_number("],[0,"leit"]],"start1":200,"start2":200,"length1":37,"length2":34},{"diffs":[[0,"eita"],[-1,"]\n}\n"],[1,")"],[0,"\nbas"]],"start1":240,"start2":240,"length1":12,"length2":9},{"diffs":[[0,"\n   "],[-1," let [esquerda, direita] ="],[0," ver"]],"start1":283,"start2":283,"length1":34,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"robotbit\": \"github:kittenbot/pxt-robotbit#v0.4.6\""],[0,"\n   "]],"start1":154,"start2":154,"length1":68,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"or\n\n"],[-1,"'''\n\nmotorA = robotbit.Motors.M1A\nmotorB = robotbit.Motors.M1B\n\ndef on_forever():\n    robotbit.motor_run(motorA, 150)\n    robotbit.motor_run(motorB, 150)\n    basic.pause(2500)\n    robotbit.motor_run(motorA, 0)\n    robotbit.motor_run(motorB, 0)\n    basic.pause(2500)\nbasic.forever(on_forever)\n\n\n'''\n\nmotorA = robotbit.Motors.M1A\nmotorB = robotbit.Motors.M1B"],[1,"---"],[0,"\n\nde"]],"start1":17,"start2":17,"length1":364,"length2":11},{"diffs":[[0,"Pin.P1)\n    "],[1,"#"],[0,"leitor_direi"]],"start1":93,"start2":93,"length1":24,"length2":25},{"diffs":[[0,"2)\n\n    "],[-1,"#"],[0,"basic.sh"]],"start1":155,"start2":155,"length1":17,"length2":16},{"diffs":[[0,"da)\n"],[-1,"\n"],[0,"    "],[-1,"return leitor_esquerda, "],[1,"#serial.write_number("],[0,"leit"]],"start1":194,"start2":194,"length1":37,"length2":33},{"diffs":[[0,"eita"],[1,")\n"],[0,"\n\n\n"],[-1,"\n"],[0,"def "]],"start1":233,"start2":233,"length1":12,"length2":13},{"diffs":[[0,"    "],[-1,"esquerda, direita = verificar();\n\n    if esquerda == 1:\n        #detectou linha na esquerda\n        #parar motor direito pra esteira ir p esquerda\n        "],[1,"verificar()"],[0,"\n\n  "]],"start1":260,"start2":260,"length1":163,"length2":19}]}]},{"timestamp":1747916595394,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"squerda\n"],[1,"        \n\n    "],[0,"\n\nbasic."]],"start1":759,"start2":759,"length1":16,"length2":30}]}]},{"timestamp":1747918797290,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"squerda\n"],[-1,"    "],[0,"\n\nbasic."]],"start1":759,"start2":759,"length1":20,"length2":16}]}]},{"timestamp":1747918798463,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"et motor"],[-1,"_esquerda"],[1,"A"],[0," = robot"]],"start1":325,"start2":325,"length1":25,"length2":17},{"diffs":[[0,"et motor"],[-1,"_direita"],[1,"B"],[0," = robot"]],"start1":358,"start2":358,"length1":24,"length2":17},{"diffs":[[0,"gPin.P2)\n   "],[1," //"],[0," basic.showS"]],"start1":532,"start2":532,"length1":24,"length2":27},{"diffs":[[0,"show"],[-1,"String(\"\" + "],[1,"_number("],[0,"leit"]],"start1":554,"start2":554,"length1":20,"length2":16},{"diffs":[[0,"erda"],[-1," + \",\" + (\"\" + leitor_direita)"],[0,")\n  "]],"start1":577,"start2":577,"length1":38,"length2":8},{"diffs":[[0,"forever() {\n"],[1,""],[0,"    let [esq"]],"start1":657,"start2":657,"length1":24,"length2":24},{"diffs":[[0,"r()\n"],[-1,"    if (esquerda == 1) {\n        // detectou linha na esquerda\n        // parar motor direito pra esteira ir p esquerda\n        robotbit.MotorRun(motor_direita, 20)\n        robotbit.MotorRun(motor_esquerda, 150)\n    } else if (direita == 1) {\n        robotbit.MotorRun(motor_esquerda, 20)\n        robotbit.MotorRun(motor_direita, 150)\n    } else {\n        robotbit.MotorRun(motor_direita, 150)\n        robotbit.MotorRun(motor_esquerda, 150)\n    }\n    \n"],[0,"})\n"]],"start1":707,"start2":707,"length1":459,"length2":7}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"'\n\nmotor"],[-1,"_esquerda"],[1,"A"],[0," = robot"]],"start1":317,"start2":317,"length1":25,"length2":17},{"diffs":[[0,"1A\nmotor"],[-1,"_direita"],[1,"B"],[0," = robot"]],"start1":346,"start2":346,"length1":24,"length2":17},{"diffs":[[0,"in.P2)\n\n    "],[1,"#"],[0,"basic.show_s"]],"start1":503,"start2":503,"length1":24,"length2":25},{"diffs":[[0,"how_"],[-1,"string(st"],[1,"numbe"],[0,"r(le"]],"start1":523,"start2":523,"length1":17,"length2":13},{"diffs":[[0,"rda)"],[-1," + \",\" + str(leitor_direita))"],[0,"\n\n  "]],"start1":546,"start2":546,"length1":37,"length2":8},{"diffs":[[0,"ificar()"],[1,";"],[0,"\n\n    if"]],"start1":643,"start2":643,"length1":16,"length2":17},{"diffs":[[0,"rda\n"],[1,""],[0,"    "],[-1,"    robotbit.motor_run(\n            motor_direita,\n            20\n        )\n        robotbit.motor_run(\n            motor_esquerda,\n            150\n        )\n    elif direita == 1:\n        robotbit.motor_run(\n            motor_esquerda,\n            20\n        )\n        robotbit.motor_run(\n            motor_direita,\n            150\n        )\n    else:\n        robotbit.motor_run(\n            motor_direita,\n            150\n        )\n        robotbit.motor_run(\n            motor_esquerda,\n            150\n        )"],[0,"\n\nba"]],"start1":763,"start2":763,"length1":527,"length2":12}]}]},{"timestamp":1747919101949,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"        "],[1,"2"],[0,"0\n      "]],"start1":1058,"start2":1058,"length1":16,"length2":17}]}]},{"timestamp":1747920267509,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"querda, "],[1,"2"],[0,"0)\n     "]],"start1":1034,"start2":1034,"length1":16,"length2":17}]}]},{"timestamp":1747920272527,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"_direita = pins."],[-1,"digital"],[1,"analog"],[0,"ReadPin(AnalogPi"]],"start1":512,"start2":512,"length1":39,"length2":38},{"diffs":[[0,".P2)\n   "],[-1," //"],[0," basic.s"]],"start1":551,"start2":551,"length1":19,"length2":16},{"diffs":[[0,"show"],[-1,"_s"],[1,"S"],[0,"tring("],[-1,"str("],[1,"\"\" + "],[0,"leit"]],"start1":566,"start2":566,"length1":20,"length2":20},{"diffs":[[0,"esquerda"],[-1,")"],[0," + \",\" +"]],"start1":589,"start2":589,"length1":17,"length2":16},{"diffs":[[0,"\" + "],[-1,"str("],[1,"(\"\" + "],[0,"leit"]],"start1":602,"start2":602,"length1":12,"length2":14},{"diffs":[[0,"ireita, "],[1,"2"],[0,"0)\n     "]],"start1":910,"start2":910,"length1":16,"length2":17},{"diffs":[[0,"querda, "],[-1,"255"],[1,"150"],[0,")\n    }"],[-1,"\n    \n   "],[1," else"],[0," if (dir"]],"start1":956,"start2":956,"length1":35,"length2":31},{"diffs":[[0,"ta, "],[-1,"255"],[1,"150"],[0,")\n    }"],[-1,"\n    \n    if (esquerda == 0 && direita == 0)"],[1," else"],[0," {\n "]],"start1":1082,"start2":1082,"length1":62,"length2":23},{"diffs":[[0,"ireita, "],[-1,"255"],[1,"150"],[0,")\n      "]],"start1":1137,"start2":1137,"length1":19,"length2":19},{"diffs":[[0,"da, "],[-1,"255"],[1,"150"],[0,")\n  "]],"start1":1188,"start2":1188,"length1":11,"length2":11}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"_direita = pins."],[-1,"digital"],[1,"analog"],[0,"_read_pin(Analog"]],"start1":479,"start2":479,"length1":39,"length2":38},{"diffs":[[0,"2)\n\n    "],[-1,"#"],[0,"basic.sh"]],"start1":522,"start2":522,"length1":17,"length2":16},{"diffs":[[0,"ta,\n            "],[1,"2"],[0,"0\n        )\n    "]],"start1":864,"start2":864,"length1":32,"length2":33},{"diffs":[[0,"da,\n            "],[-1,"255"],[1,"150"],[0,"\n        )\n     "]],"start1":945,"start2":945,"length1":35,"length2":35},{"diffs":[[0,"  )\n    "],[-1,"    \n    "],[1,"el"],[0,"if direi"]],"start1":971,"start2":971,"length1":25,"length2":18},{"diffs":[[0,"ta,\n            "],[-1,"255"],[1,"150"],[0,"\n        )\n     "]],"start1":1129,"start2":1129,"length1":35,"length2":35},{"diffs":[[0,"    "],[-1,"    \n    if esquerda == 0 and direita == 0"],[1,"else"],[0,":\n  "]],"start1":1159,"start2":1159,"length1":50,"length2":12},{"diffs":[[0,"ta,\n            "],[-1,"255"],[1,"150"],[0,"\n        )\n     "]],"start1":1220,"start2":1220,"length1":35,"length2":35},{"diffs":[[0,"    "],[-1,"255"],[1,"150"],[0,"\n   "]],"start1":1314,"start2":1314,"length1":11,"length2":11},{"diffs":[[0,"       )"],[-1,"\n        "],[0,"\n\nbasic."]],"start1":1323,"start2":1323,"length1":25,"length2":16}]}]},{"timestamp":1747920843829,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"    "],[-1,"70"],[1,"255"],[0,"\n   "]],"start1":1149,"start2":1149,"length1":10,"length2":11}]}]},{"timestamp":1747923514375,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ta, "],[-1,"70"],[1,"255"],[0,")\n  "]],"start1":1088,"start2":1088,"length1":10,"length2":11}]}]},{"timestamp":1747923514529,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"M1B\n"],[-1,"let max_speed = 170\n"],[0,"func"]],"start1":401,"start2":401,"length1":28,"length2":8},{"diffs":[[0,"r_esquerda, "],[-1,"max_speed"],[1,"255"],[0,")\n    }\n    "]],"start1":954,"start2":954,"length1":33,"length2":27},{"diffs":[[0,"or_direita, "],[-1,"max_speed"],[1,"70"],[0,")\n    }\n    "]],"start1":1080,"start2":1080,"length1":33,"length2":26},{"diffs":[[0,"ireita, "],[-1,"max_speed"],[1,"255"],[0,")\n      "]],"start1":1181,"start2":1181,"length1":25,"length2":19},{"diffs":[[0,"da, "],[-1,"max_speed"],[1,"255"],[0,")\n  "]],"start1":1232,"start2":1232,"length1":17,"length2":11}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,".M1B"],[-1,"\nmax_speed = 170"],[0,"\n\nde"]],"start1":388,"start2":388,"length1":24,"length2":8},{"diffs":[[0,"            "],[-1,"max_speed"],[1,"255"],[0,"\n        )\n "]],"start1":950,"start2":950,"length1":33,"length2":27},{"diffs":[[0,"            "],[-1,"max_speed"],[1,"70"],[0,"\n        )\n "]],"start1":1141,"start2":1141,"length1":33,"length2":26},{"diffs":[[0,"            "],[-1,"max_speed"],[1,"255"],[0,"\n        )\n "]],"start1":1269,"start2":1269,"length1":33,"length2":27},{"diffs":[[0,"    "],[-1,"max_speed"],[1,"255"],[0,"\n   "]],"start1":1359,"start2":1359,"length1":17,"length2":11}]}]},{"timestamp":1747924024240,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = 1"],[-1,"8"],[1,"7"],[0,"0\nfu"]],"start1":418,"start2":418,"length1":9,"length2":9}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," = 1"],[-1,"8"],[1,"7"],[0,"0\n\nd"]],"start1":402,"start2":402,"length1":9,"length2":9}]}]},{"timestamp":1747924449881,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"d = "],[-1,"255\nlet normal_speed = 17"],[1,"18"],[0,"0\nfu"]],"start1":417,"start2":417,"length1":33,"length2":10},{"diffs":[[0,"ireita, "],[-1,"nor"],[0,"ma"],[-1,"l"],[1,"x"],[0,"_speed)\n"]],"start1":1214,"start2":1214,"length1":22,"length2":19},{"diffs":[[0,"da, "],[-1,"nor"],[0,"ma"],[-1,"l"],[1,"x"],[0,"_spe"]],"start1":1271,"start2":1271,"length1":14,"length2":11}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"d = "],[-1,"255\nnormal_speed = 17"],[1,"18"],[0,"0\n\nd"]],"start1":401,"start2":401,"length1":29,"length2":10},{"diffs":[[0,"ta,\n            "],[-1,"nor"],[0,"ma"],[-1,"l"],[1,"x"],[0,"_speed\n        )"]],"start1":1294,"start2":1294,"length1":38,"length2":35},{"diffs":[[0,"    "],[-1,"nor"],[0,"ma"],[-1,"l"],[1,"x"],[0,"_spe"]],"start1":1394,"start2":1394,"length1":14,"length2":11}]}]},{"timestamp":1747925032201,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"    "],[-1,"-normal_speed/2"],[1,"0"],[0,"\n   "]],"start1":1111,"start2":1111,"length1":23,"length2":9}]}]},{"timestamp":1747925835293,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"da, "],[-1,"-normal_speed / 2"],[1,"0"],[0,")\n  "]],"start1":1093,"start2":1093,"length1":25,"length2":9}]}]},{"timestamp":1747925835389,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":114}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ireita, "],[-1,"-normal_speed / 2"],[1,"0"],[0,")\n      "]],"start1":956,"start2":956,"length1":33,"length2":17}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":325,"start2":325,"length1":52,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"            "],[-1,"-normal_speed/2"],[1,"0"],[0,"\n        )\n "]],"start1":905,"start2":905,"length1":39,"length2":25}]},{"type":"added","filename":"test.ts","value":"// os teses vão aqui; isto não será compilado quando este pacote for usado como extensão.\n"}]}],"snapshots":[{"timestamp":1747343704878,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"novo leitor de linha buceta\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1747345532725,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"# 0: preto\n# 1: cor\n\ndef verificar():\n    leitor_esquerda = pins.analog_read_pin(AnalogPin.P1)\n    leitor_direita = pins.analog_read_pin(AnalogPin.P2)\n\n    serial.write_number(leitor_esquerda)\n    serial.write_number(leitor_direita)\n\n\n\ndef on_forever():\n    verificar()\n\n    \n\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"novo leitor de linha buceta\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1747915179660,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"# 0: preto\n# 1: cor\n\ndef verificar():\n    leitor_esquerda = pins.digital_read_pin(AnalogPin.P2)\n    #leitor_direita = pins.analog_read_pin(AnalogPin.P2)\n\n    basic.show_number(leitor_esquerda)\n    #serial.write_number(leitor_direita)\n\n\n\ndef on_forever():\n    verificar()\n\n    \n\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"novo leitor de linha buceta\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1747918797290,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"# 0: preto\n# 1: cor\n\n'''\n\nmotorA = robotbit.Motors.M1A\nmotorB = robotbit.Motors.M1B\n\ndef on_forever():\n    robotbit.motor_run(motorA, 150)\n    robotbit.motor_run(motorB, 150)\n    basic.pause(2500)\n    robotbit.motor_run(motorA, 0)\n    robotbit.motor_run(motorB, 0)\n    basic.pause(2500)\nbasic.forever(on_forever)\n\n\n'''\n\nmotorA = robotbit.Motors.M1A\nmotorB = robotbit.Motors.M1B\n\ndef verificar():\n    leitor_esquerda = pins.digital_read_pin(AnalogPin.P1)\n    leitor_direita = pins.analog_read_pin(AnalogPin.P2)\n\n    #basic.show_number(leitor_esquerda)\n\n    return leitor_esquerda, leitor_direita\n\n\n\ndef on_forever():\n    esquerda, direita = verificar();\n\n    if esquerda == 1:\n        #detectou linha na esquerda\n        #parar motor direito pra esteira ir p esquerda\n        \n\n    \n\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"novo leitor de linha buceta\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"robotbit\": \"github:kittenbot/pxt-robotbit#v0.4.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1747920622926,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"# 0: preto\n# 1: cor\n\n'''\n\nmotorA = robotbit.Motors.M1A\nmotorB = robotbit.Motors.M1B\n\ndef on_forever():\n    robotbit.motor_run(motorA, 150)\n    robotbit.motor_run(motorB, 150)\n    basic.pause(2500)\n    robotbit.motor_run(motorA, 0)\n    robotbit.motor_run(motorB, 0)\n    basic.pause(2500)\nbasic.forever(on_forever)\n\n\n'''\n\nmotor_esquerda = robotbit.Motors.M1A\nmotor_direita = robotbit.Motors.M1B\n\ndef verificar():\n    leitor_esquerda = pins.digital_read_pin(AnalogPin.P1)\n    leitor_direita = pins.analog_read_pin(AnalogPin.P2)\n\n    #basic.show_string(str(leitor_esquerda) + \",\" + str(leitor_direita))\n\n    return leitor_esquerda, leitor_direita\n\n\n\ndef on_forever():\n    esquerda, direita = verificar()\n\n    if esquerda == 1:\n        #detectou linha na esquerda\n        #parar motor direito pra esteira ir p esquerda\n        robotbit.motor_run(\n            motor_direita,\n            0\n        )\n        robotbit.motor_run(\n            motor_esquerda,\n            255\n        )\n    elif direita == 1:\n        robotbit.motor_run(\n            motor_esquerda,\n            0\n        )\n        robotbit.motor_run(\n            motor_direita,\n            255\n        )\n    else:\n        robotbit.motor_run(\n            motor_direita,\n            255\n        )\n        robotbit.motor_run(\n            motor_esquerda,\n            255\n        )\n\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"novo leitor de linha buceta\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"robotbit\": \"github:kittenbot/pxt-robotbit#v0.4.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1747923514375,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"# 0: preto\n# 1: cor\n\n'''\n\nmotorA = robotbit.Motors.M1A\nmotorB = robotbit.Motors.M1B\n\ndef on_forever():\n    robotbit.motor_run(motorA, 150)\n    robotbit.motor_run(motorB, 150)\n    basic.pause(2500)\n    robotbit.motor_run(motorA, 0)\n    robotbit.motor_run(motorB, 0)\n    basic.pause(2500)\nbasic.forever(on_forever)\n\n\n'''\n\nmotor_esquerda = robotbit.Motors.M1A\nmotor_direita = robotbit.Motors.M1B\n\ndef verificar():\n    leitor_esquerda = pins.digital_read_pin(AnalogPin.P1)\n    leitor_direita = pins.digital_read_pin(AnalogPin.P2)\n\n    #basic.show_string(str(leitor_esquerda) + \",\" + str(leitor_direita))\n\n    return leitor_esquerda, leitor_direita\n\n\n\ndef on_forever():\n    esquerda, direita = verificar()\n\n    if esquerda == 1:\n        #detectou linha na esquerda\n        #parar motor direito pra esteira ir p esquerda\n        robotbit.motor_run(\n            motor_direita,\n            0\n        )\n        robotbit.motor_run(\n            motor_esquerda,\n            255\n        )\n        \n    if direita == 1:\n        robotbit.motor_run(\n            motor_esquerda,\n            0\n        )\n        robotbit.motor_run(\n            motor_direita,\n            255\n        )\n        \n    if esquerda == 0 and direita == 0:\n        robotbit.motor_run(\n            motor_direita,\n            255\n        )\n        robotbit.motor_run(\n            motor_esquerda,\n            255\n        )\n        \n\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"novo leitor de linha buceta\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"robotbit\": \"github:kittenbot/pxt-robotbit#v0.4.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1747925835293,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"# 0: preto\n# 1: cor\n\n'''\n\nmotorA = robotbit.Motors.M1A\nmotorB = robotbit.Motors.M1B\n\ndef on_forever():\n    robotbit.motor_run(motorA, 150)\n    robotbit.motor_run(motorB, 150)\n    basic.pause(2500)\n    robotbit.motor_run(motorA, 0)\n    robotbit.motor_run(motorB, 0)\n    basic.pause(2500)\nbasic.forever(on_forever)\n\n\n'''\n\nmotor_esquerda = robotbit.Motors.M1A\nmotor_direita = robotbit.Motors.M1B\nmax_speed = 255\nnormal_speed = 170\n\ndef verificar():\n    leitor_esquerda = pins.digital_read_pin(AnalogPin.P1)\n    leitor_direita = pins.digital_read_pin(AnalogPin.P2)\n\n    #basic.show_string(str(leitor_esquerda) + \",\" + str(leitor_direita))\n\n    return leitor_esquerda, leitor_direita\n\n\n\ndef on_forever():\n    esquerda, direita = verificar()\n\n    if esquerda == 1:\n        #detectou linha na esquerda\n        #parar motor direito pra esteira ir p esquerda\n        robotbit.motor_run(\n            motor_direita,\n            0\n        )\n        robotbit.motor_run(\n            motor_esquerda,\n            max_speed\n        )\n        \n    if direita == 1:\n        robotbit.motor_run(\n            motor_esquerda,\n            0\n        )\n        robotbit.motor_run(\n            motor_direita,\n            max_speed\n        )\n        \n    if esquerda == 0 and direita == 0:\n        robotbit.motor_run(\n            motor_direita,\n            normal_speed\n        )\n        robotbit.motor_run(\n            motor_esquerda,\n            normal_speed\n        )\n        \n\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"novo leitor de linha buceta\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"robotbit\": \"github:kittenbot/pxt-robotbit#v0.4.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1747926286599}